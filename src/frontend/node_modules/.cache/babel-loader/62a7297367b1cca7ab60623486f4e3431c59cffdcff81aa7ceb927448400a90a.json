{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agusg\\\\Desktop\\\\NOMBRE-DE-LA-APP\\\\src\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// Archivo App.jsx actualizado\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, Tooltip, Legend, CategoryScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, Tooltip, Legend, CategoryScale);\nfunction App() {\n  _s();\n  const [metodo, setMetodo] = useState(\"Bisección\");\n  const [funcion, setFuncion] = useState(\"x**3 - 6*x + 2\");\n  const [a, setA] = useState(1);\n  const [b, setB] = useState(4);\n  const [tol, setTol] = useState(0.001);\n  const [maxIter, setMaxIter] = useState(50);\n  const [resultado, setResultado] = useState(null);\n  const [x0, setX0] = useState(1.5);\n  const [x1, setX1] = useState(1);\n  const [matriz, setMatriz] = useState([[4, -1, 0], [-1, 4, -1], [0, -1, 3]]);\n  const [vectorB, setVectorB] = useState([15, 10, 10]);\n  const actualizarMatriz = (i, j, valor) => {\n    const nueva = [...matriz];\n    nueva[i][j] = parseFloat(valor);\n    setMatriz(nueva);\n  };\n  const actualizarVectorB = (i, valor) => {\n    const nuevo = [...vectorB];\n    nuevo[i] = parseFloat(valor);\n    setVectorB(nuevo);\n  };\n  const calcular = async () => {\n    try {\n      let res;\n      if (metodo === \"Bisección\") {\n        res = await fetch(\"http://localhost:8000/biseccion\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            funcion,\n            a,\n            b,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      } else if (metodo === \"Regula-Falsi\") {\n        res = await fetch(\"http://localhost:8000/regula_falsi\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            funcion,\n            a,\n            b,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      } else if (metodo === \"Secante\") {\n        res = await fetch(\"http://localhost:8000/secante\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            funcion,\n            x0,\n            x1,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      } else if (metodo === \"Newton-Raphson\") {\n        res = await fetch(\"http://localhost:8000/newton\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            funcion,\n            x0,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      } else if (metodo === \"Gauss-Seidel\") {\n        res = await fetch(\"http://localhost:8000/gauss_seidel\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            A: matriz,\n            b: vectorB,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      } else if (metodo === \"Jacobi\") {\n        res = await fetch(\"http://localhost:8000/jacobi\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            A: matriz,\n            b: vectorB,\n            tol,\n            max_iter: maxIter\n          })\n        });\n      }\n      if (!res.ok) throw new Error(\"Error en la solicitud\");\n      const data = await res.json();\n      setResultado(data);\n    } catch (error) {\n      console.error(\"Error en el cálculo:\", error);\n    }\n  };\n\n  // El resto del código JSX y componentes se mantiene igual\n  // Solo asegurate de eliminar los botones <button onClick={calcularSecante}> y <button onClick={calcularRegulaFalsi}>\n  // y que todos usen <button onClick={calcular}> como botón general\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"...tu JSX como est\\xE1...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Py503WEGBpAI1gRfQHw+MM/ehvU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","Tooltip","Legend","CategoryScale","jsxDEV","_jsxDEV","register","App","_s","metodo","setMetodo","funcion","setFuncion","a","setA","b","setB","tol","setTol","maxIter","setMaxIter","resultado","setResultado","x0","setX0","x1","setX1","matriz","setMatriz","vectorB","setVectorB","actualizarMatriz","i","j","valor","nueva","parseFloat","actualizarVectorB","nuevo","calcular","res","fetch","method","headers","body","JSON","stringify","max_iter","A","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/agusg/Desktop/NOMBRE-DE-LA-APP/src/frontend/src/App.jsx"],"sourcesContent":["// Archivo App.jsx actualizado\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  PointElement,\r\n  LinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  CategoryScale,\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, PointElement, LinearScale, Title, Tooltip, Legend, CategoryScale);\r\n\r\nfunction App() {\r\n  const [metodo, setMetodo] = useState(\"Bisección\");\r\n  const [funcion, setFuncion] = useState(\"x**3 - 6*x + 2\");\r\n  const [a, setA] = useState(1);\r\n  const [b, setB] = useState(4);\r\n  const [tol, setTol] = useState(0.001);\r\n  const [maxIter, setMaxIter] = useState(50);\r\n  const [resultado, setResultado] = useState(null);\r\n  const [x0, setX0] = useState(1.5);\r\n  const [x1, setX1] = useState(1);\r\n\r\n  const [matriz, setMatriz] = useState([\r\n    [4, -1, 0],\r\n    [-1, 4, -1],\r\n    [0, -1, 3],\r\n  ]);\r\n  const [vectorB, setVectorB] = useState([15, 10, 10]);\r\n\r\n  const actualizarMatriz = (i, j, valor) => {\r\n    const nueva = [...matriz];\r\n    nueva[i][j] = parseFloat(valor);\r\n    setMatriz(nueva);\r\n  };\r\n\r\n  const actualizarVectorB = (i, valor) => {\r\n    const nuevo = [...vectorB];\r\n    nuevo[i] = parseFloat(valor);\r\n    setVectorB(nuevo);\r\n  };\r\n\r\n  const calcular = async () => {\r\n    try {\r\n      let res;\r\n      if (metodo === \"Bisección\") {\r\n        res = await fetch(\"http://localhost:8000/biseccion\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ funcion, a, b, tol, max_iter: maxIter })\r\n        });\r\n      } else if (metodo === \"Regula-Falsi\") {\r\n        res = await fetch(\"http://localhost:8000/regula_falsi\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ funcion, a, b, tol, max_iter: maxIter })\r\n        });\r\n      } else if (metodo === \"Secante\") {\r\n        res = await fetch(\"http://localhost:8000/secante\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ funcion, x0, x1, tol, max_iter: maxIter })\r\n        });\r\n      } else if (metodo === \"Newton-Raphson\") {\r\n        res = await fetch(\"http://localhost:8000/newton\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ funcion, x0, tol, max_iter: maxIter })\r\n        });\r\n      } else if (metodo === \"Gauss-Seidel\") {\r\n        res = await fetch(\"http://localhost:8000/gauss_seidel\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ A: matriz, b: vectorB, tol, max_iter: maxIter })\r\n        });\r\n      } else if (metodo === \"Jacobi\") {\r\n        res = await fetch(\"http://localhost:8000/jacobi\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ A: matriz, b: vectorB, tol, max_iter: maxIter })\r\n        });\r\n      }\r\n      if (!res.ok) throw new Error(\"Error en la solicitud\");\r\n      const data = await res.json();\r\n      setResultado(data);\r\n    } catch (error) {\r\n      console.error(\"Error en el cálculo:\", error);\r\n    }\r\n  };\r\n\r\n  // El resto del código JSX y componentes se mantiene igual\r\n  // Solo asegurate de eliminar los botones <button onClick={calcularSecante}> y <button onClick={calcularRegulaFalsi}>\r\n  // y que todos usen <button onClick={calcular}> como botón general\r\n\r\n  return (\r\n    <div>...tu JSX como está...</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}